
#_____________________________________________________________
# Assignment 3
#____________________________________________________________
# 1. Write a Python function to read and reverse a string.

def reverse_str(s):
    return s[::-1]
string = input("Enter string: ")
print(reverse_str(string))

'''
Enter string: hihelo
olehih
'''
-------------------------------------------------------

# 10. Write a Python function to remove all whitespace characters from a given string.

def remove_whitespace(input_string):
    return ''.join(input_string.split())

print("space removed: ", remove_whitespace(input("Enter String: ")))

'''
Enter String: hi helo     whatsup
space removed:  hihelowhatsup
'''
-------------------------------------------------------

# 11. Write a Python function to extract even and odd indexed elements from a given list using slicing.

def extract_even_odd_index(lst):
    return  lst[::2], lst[1::2]

l = [1, 2, 4, 6, 8, 10]
print(extract_even_odd_index(l))

'''
([1, 4, 8], [2, 6, 10])
'''
-------------------------------------------------------

# 12. Write a Python function to reverse a given list using slicing.

def reverse_list(lst):
    return lst[::-1]

l = [1, 2, 3]
print(reverse_list(l))
-------------------------------------------------------

# 13. Write a Python function to extract a sublist from a given list using slicing.
def sublist(lst, start = 0, end = 0):
    end+=1
    return lst[start:end]

l1 = [1, 2, 3, 4, 10]

print(sublist(l1, 1, 2))

'''
[2, 3]
'''
-------------------------------------------------------

# 14. Write a Python function to extract alternate elements from a given list using slicing.

def alter(lst, start = 0):
    return lst[start::2]

l1 = [1, 2, 3, 56, 12]

print(alter(l1, 1))
print(alter(l1, 0))

'''
[2, 56]
[1, 3, 12]
'''
-------------------------------------------------------

# 15. Write a Python function to replace a sublist within a list with another sublist using slicing.
def replace_sublist(list_item, start, end, new_list):
    list_item[start:end] = new_list
    return list_item

list_item = [1, 2, 3, 4, 5, 6]
new_list = [7, 8, 9]
updated_list = replace_sublist(list_item, 2, 5, new_list)

print(updated_list)

'''
[1, 2, 7, 8, 9, 6]
'''
-------------------------------------------------------

# 16. Write a Python function to compute the factorial of a given number recursively.
def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)
    
print(factorial(5))
print(factorial(6))

'''
120
720
'''
-------------------------------------------------------

# 19. Write a Python function to generate the Fibonacci sequence up to a specified number of terms
def fibonacci(n):
    fib_sequence = [0, 1]
    while len(fib_sequence) < n:
        fib_sequence.append(fib_sequence[-1] + fib_sequence[-2])
    return fib_sequence

# Test the function
print(fibonacci(10))
print(fibonacci(12))

'''
[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
'''
-------------------------------------------------------

# 2. Write a Python function to count the number of vowels in a given string

def vowel_counter(string):
    counter = 0
    for c in string:
        for vowel in "aeiouAEIOU":
            if c == vowel: 
                counter+=1
    
    return counter

string = input("Enter string: ")

print(f"Total vowels: {vowel_counter(string)}")

'''
Enter string: hihElo
Total vowels: 3
'''
-------------------------------------------------------

# 20. Write a Python function to convert temperature from Celsius to Fahrenheit and vice versa.
def convert_temperature(temperature, from_scale, to_scale):
    if from_scale == "C" and to_scale == "F":
        return (temperature * 9/5) + 32
    elif from_scale == "F" and to_scale == "C":
        return (temperature - 32) * 5/9
    else:
        return "Invalid scale. Please use 'Celsius' or 'Fahrenheit'."

# Example usage:
print(convert_temperature(43, "C", "F"))
print(convert_temperature(68, "F", "C"))

'''
109.4
20.0
'''
-------------------------------------------------------

# 21. Write a Python function to calculate the sum of all elements in a list.
def sum_list(lst):
    sum = 0
    for i in lst:
        sum += i
    return sum

l1 = [ 1, 2, 3, 4, 5]
print(sum_list(l1))

'''
15
'''
-------------------------------------------------------

# 22. Write a Python function to remove duplicates from a list.
# 23. Write a Python function to remove duplicates from a list.

def remove_duplicates(input_list):
    result = []
    for element in input_list:
        if element not in result:
            result.append(element)
    return result

l1 = [1, 1, 2, 3, 4, 5, 5, 5]

print(remove_duplicates(l1))

'''
[1, 2, 3, 4, 5]
'''
-------------------------------------------------------

# 24. Write a Python function to generate a list of squares of numbers from 1 to N using list comprehension.

def generate_squares(n):
    return [i**2 for i in range(1, n+1)]

print(generate_squares(3))
print(generate_squares(7))

'''
[1, 4, 9]
[1, 4, 9, 16, 25, 36, 49]
'''
-------------------------------------------------------

# 25. Write a Python function to sort a list of strings in alphabetical order.

def sort_strings(mylist):
    mylist.sort()
    return mylist

# Example usage:
mylist = ["whatsup", "hi", "Runner", "run"]

print(sort_strings(mylist))

'''
['Runner', 'hi', 'run', 'whatsup']
'''
-------------------------------------------------------

# 26. Write a Python function to merge two dictionaries.
def merge_dictionaries(dict1, dict2):
    return {**dict1, **dict2}

# Example usage:
d1 = {'a': 1, 'b': 2}
d2 = {'b': 3, 'c': 4}
print(merge_dictionaries(d1, d2))

'''
{'a': 1, 'b': 3, 'c': 4}
'''
-------------------------------------------------------

# 27. Write a Python function to access the value associated with a given key in a dictionary.

def get_value(dictionary, key):
    if key in dictionary:
        return dictionary[key]
    else:
        return "Key not found in the dictionary"
    
d = {'key1': 1, 'key2': 2, 'key3': 3}
print(get_value(d, 'key1')) 
print(get_value(d, 'key4')) 

'''
1
Key not found in the dictionary
'''
-------------------------------------------------------

# 28. Write a Python function to get all keys from a dictionary.
def get_all_keys(dictionary):
    return list(dictionary.keys())

# Example usage:
d = {'name': 'Rohit', 'age': 19, 'city': 'Ahmedabad'}

print(get_all_keys(d))

'''
['name', 'age', 'city']
'''
-------------------------------------------------------

# 29. Write a Python function to update a dictionary with key-value pairs from another dictionary
def update_dictionary(d1, d2):
    for key, value in d2.items():
        d1[key] = value

d1 = {'a': 1, 'b': 2}
d2 = {'b': 3, 'c': 4}
update_dictionary(d1, d2)
print(d1)

'''
{'a': 1, 'b': 3, 'c': 4}
'''
-------------------------------------------------------

# 3. Write a Python function to remove duplicate characters from a string.
def remove_duplicates(input_string):
    return ''.join(set(input_string))

# Test the function
print("Non Duplicates: ", remove_duplicates(input("Enter String: ")))

'''
Enter String: hihi
Non Duplicates:  hi
'''
-------------------------------------------------------

# 30. Write a Python function to create a dictionary with keys as numbers from 1 to N and values as squares of the keys

def create_dictionary(n):
    return {i: i**2 for i in range(1, n+1)}

# Test the function
print(create_dictionary(5))

'''
{1: 1, 2: 4, 3: 9, 4: 16, 5: 25}
'''
-------------------------------------------------------

# 4. Write a Python function to check if a given string is a palindrome.
def is_palindrome(s = ""):
    return s == s[::-1]

print("Palindrome: ", is_palindrome(input("Enter string: ")))

'''
Enter string: hi
Palindrome:  False
__________________________
Enter string: racecar
Palindrome:  True
'''
-------------------------------------------------------

# 5. Write a Python function to count the number of words in a given string.

def count_words(s):
    return len(s.split())

print("Total words: ", count_words(input("Enter String: ")))

'''
Enter String: hi helo
Total words:  2
'''
-------------------------------------------------------

# 6. Write a Python function to convert a CamelCase string to snake_case.

def camel_to_snake(camel_case_string):
   snake_case_string = ""
   for i, c in enumerate(camel_case_string):
      if i == 0:
         snake_case_string += c.lower()
      elif c.isupper():
         snake_case_string += "_" + c.lower()
      else:
         snake_case_string += c

   return snake_case_string


print("snake_case: ", camel_to_snake(input("Enter CamelCase: ")))

'''
Enter CamelCase: hiHelo
snake_case:  hi_helo
'''
-------------------------------------------------------

# 7. Write a Python function to convert the first letter of each word to uppercase in a given string.
def convert_to_title_case(s):
    return s.title()

print(convert_to_title_case(input("Enter a sentence: ")))

'''
Enter a sentence: hi helo
Hi Helo
'''
-------------------------------------------------------

# 8. Write a Python function to count the frequency of a substring within a string.

def freq_sub(sub, string):
    counter = 0
    for i in range(len(string) - len(sub)):
        if sub == string[i:i+len(sub)]:
            counter += 1

    return counter

string = input("Enter String: ")
substr = input("Enter substring: ")

print("Total frequency: ", freq_sub(substr, string))

'''
Enter String: hi hihelo whatsup
Enter substring: hi
Total frequency:  2
'''
-------------------------------------------------------

# 9. Write a Python function to swap the case of each character in a given string.
def swap_case(s):
    return ''.join(c.upper() if c.islower() else c.lower() for c in s)

print("Case Swapped: ", swap_case(input("Enter String: "))) 

'''
Enter String: hiHeLo
Case Swapped:  HIhElO
'''
-------------------------------------------------------

import os

# Open the output file in write mode
with open('print_assignment.txt', 'w') as f:
    # Iterate over all files in the current directory
    for filename in os.listdir('.'):
        # Check if the file is a Python file
        if filename.endswith('.py'):
            # Open the file in read mode
            with open(filename, 'r') as file:
                # Read the contents of the file
                contents = file.read()
                
                f.write('\n')
                # Write the contents to the output file
                f.write(contents)
                # Add a blank line between files
                f.write('\n-------------------------------------------------------\n')

print("Python files have been written to print_assignment.txt")
-------------------------------------------------------
